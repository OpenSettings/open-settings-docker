name: Release
run-name: Release - ${{ github.ref_name }} - ${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      mark_as_latest:
        description: 'Mark this version as the latest'
        required: false
        type: boolean
        default: true
        
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          VERSION=$(echo "$BRANCH_NAME" | sed -E 's|^release/([0-9]+\.[0-9]+\.[0-9]+)(-.*)?|\1|')

          echo "Branch Name: $BRANCH_NAME"
          echo "Extracted Version: $VERSION"
          
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Version should be in the format 'x.x.x'."
            exit 1
          fi

          # Export version to the environment
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Calculate full version with run and attempt
        id: calculate_full_version
        run: |
         VERSION_WITH_RUN="${{ env.VERSION }}-${{ github.run_number }}"

         # Export version with run to the environment
         echo "VERSION_WITH_RUN=$VERSION_WITH_RUN" >> $GITHUB_ENV
         
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: opensettings
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t opensettings/open-settings:${{ env.VERSION_WITH_RUN }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push opensettings/open-settings:${{ env.VERSION_WITH_RUN }}
          if [ "${{ github.event.inputs.mark_as_latest }}" == "true" ]; then
            docker tag opensettings/open-settings:${{ env.VERSION_WITH_RUN }} opensettings/open-settings:latest
            docker push opensettings/open-settings:latest
          fi
     
      - name: Set up GitHub Actions bot user details
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create and push tag
        run: |
          TAG_NAME="v${{ env.VERSION_WITH_RUN }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          
      - name: Create GitHub Release
        run: gh release create v${{ env.VERSION_WITH_RUN }} --title "Release v${{ env.VERSION_WITH_RUN }}" --notes "This is a release of version v${{ env.VERSION_WITH_RUN }}." --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}       