name: Docker Push
run-name: Docker Push - ${{ github.event.inputs.project_name }} v${{ github.event.inputs.version_number }}

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number of the package'
        required: true
        default: '1.0.1-1'
      mark_as_latest:
        description: 'Mark this version as the latest'
        required: false
        type: boolean
        default: true
        
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Validate version number format
        run: |
          if [[ ! "${{ github.event.inputs.version_number }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?(-preview\.[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?)?$ ]]; then
            echo "Invalid version number format. Version number should be in the format '[0-9].[0-9].[0-9]', '[0-9].[0-9].[0-9]-[0-9]', '[0-9].[0-9].[0-9]-preview.[0-9].[0-9].[0-9]', or '[0-9].[0-9].[0-9]-preview.[0-9].[0-9].[0-9]-[0-9]'"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t OpenSettings/open-settings:${{ github.event.inputs.version_number }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push OpenSettings/open-settings:${{ github.event.inputs.version_number }}
          if [ "${{ github.event.inputs.mark_as_latest }}" == "true" ]; then
            docker tag OpenSettings/open-settings:${{ github.event.inputs.version_number }} OpenSettings/open-settings:latest
            docker push OpenSettings/open-settings:latest
          fi

      - name: Create Release
        run: gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --notes "" --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
      - name: Set up GitHub Actions bot user details
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create and push tag
        run: |
          TAG_NAME="v${{ github.event.inputs.version_number }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME